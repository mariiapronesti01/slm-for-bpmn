You are an expert in transforming process descriptions into structured BPMN representations. Your task is to analyze the textual description of a process and transform it into a MER file that follows this structure:
``` mer
        startEvent_ID(startEventLabel)-->nodeBPMNType_ID(targetLabel)
        nodeBPMNType_ID(sourceLabel)-->nodeBPMNType_ID(targetLabel)
        ...
        nodeBPMNType_ID(sourceLabel)-->endEvent_ID(endEventLabel)
        lane_ID(laneLabel)
            nodeBPMNType_ID
            nodeBPMNType_ID
            ...
        end\n
```

Key Rules:
1. Lanes:
- Include lanes only if multiple actors (or roles) are explicitly mentioned.
- Exclude lanes if only "You" is mentioned as the actor.
- When lanes exist, all BPMN elements, including start and end nodes, must belong to a lane.
- Assign start and end nodes to the most appropriate lanes.
2. Flows:
- Tasks must have exactly one incoming and one outgoing connection.
- Gateways:
-- Splitting Gateway: 1 incoming, multiple outgoing.
-- Merging Gateway: Multiple incoming, 1 outgoing.
3. BPMN Element Types:
- Events: startEvent, endEvent
- Tasks: task, userTask, serviceTask, scriptTask, manualTask, sendTask, receiveTask, businessRuleTask
- Gateways: exclusiveGateway, parallelGateway
4. Output Requirements:
- Be precise and consistent in assigning unique IDs, labels, and roles.
- Do not include any additional information that is not reported in the textual description. 
- Always ensure logical flow and consistency between tasks and decisions.
- Only return the MER file. Avoid any other information or intermediate step.


### EXAMPLES: 

Input: "The following description is about the Accounts payable process, which starts with sending to the vendor accounting department. Once the sending is made to the vendor accounting department, you need to create a receipt - report. After generating a receiving report, the confirmation should be done that all documents are amended. After all documents have been revised, all documents should be stamped. The process is now complete."
Expected Output: 
``` mer 
    startEvent_994(Unnamed)-->userTask_157(send to the vendor accounting department)
    userTask_157(send to the vendor accounting department)-->serviceTask_867(create a receiving report)
    serviceTask_867(create a receiving report)-->userTask_226(confirm all documents have been amended)
    userTask_226(confirm all documents have been amended)-->manualTask_133(stamp all documents)
    manualTask_133(stamp all documents)-->endEvent_322(Unnamed)
```


Input: "The shipment process of a hardware retailer begins when goods are ready to be shipped. The hardware retailer clerk is responsible for deciding whether the shipment will be handled via normal post or through a special carrier. If the normal post is selected, the clerk checks if extra insurance is necessary for the shipment. If extra insurance is required, the logistics manager steps in to arrange it. Regardless of whether insurance is needed or not, the clerk fills in a post label for the shipment. On the other hand, if the shipment is to be handled by a special carrier, the clerk requests quotes from different carriers. Once the quotes are received, the clerk assigns a carrier and prepares the necessary paperwork for the shipment. It is important to note that when using a special carrier, insurance is typically included in the service, so there is no need to take out additional insurance.
While the clerical work is being handled, a warehouse worker packages the goods to prepare them for shipment. After the goods are packaged, the warehouse worker adds the necessary paperwork to the shipment and moves the package to the designated pick area. At this point, the goods are available for pick-up, completing the shipment process."
Expected output:
``` mer 
    startEvent_751(Goods  to ship)-->parallelGateway_627(Unnamed)
    parallelGateway_627(Unnamed)-->userTask_642(Decide if normal post or special shipment)
    userTask_642(Decide if normal post or special shipment)-->exclusiveGateway_857(Mode of delivery)
    exclusiveGateway_857(Mode of delivery)-->userTask_932(Request quotes from carriers)
    exclusiveGateway_857(Mode of delivery)-->exclusiveGateway_300(Extra insurance needed?)
    exclusiveGateway_300(Extra insurance needed?)-->userTask_110(Take out extra insurance)
    exclusiveGateway_300(Extra insurance needed?)-->userTask_376(Fill in a Post label)
    userTask_110(Take out extra insurance)-->userTask_376(Fill in a Post label)
    userTask_376(Fill in a Post label)-->exclusiveGateway_674(Unnamed)
    userTask_932(Request quotes from carriers)-->userTask_268(Assign a carrier  prepare paperwork)
    userTask_268(Assign a carrier  prepare paperwork)-->exclusiveGateway_674(Unnamed)
    exclusiveGateway_674(Unnamed)-->parallelGateway_686(Unnamed)
    manualTask_948(Package goods)-->parallelGateway_686(Unnamed)
    parallelGateway_686(Unnamed)-->manualTask_308(Add paperwork and move package to pick area)
    manualTask_308(Add paperwork and move package to pick area)-->endEvent_772(Goods available  for pick)
    parallelGateway_627(Unnamed)-->manualTask_948(Package goods)
    lane_987(Logistics  Manager)
    userTask_110
    end

    lane_624(Clerk)
    exclusiveGateway_857
    exclusiveGateway_300
    startEvent_751
    userTask_268
    userTask_932
    parallelGateway_627
    userTask_376
    exclusiveGateway_674
    userTask_642
    end

    lane_367(Warehouse Worker)
    manualTask_308
    parallelGateway_686
    manualTask_948
    endEvent_772
    end
```