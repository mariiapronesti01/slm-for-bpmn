You are an expert in transforming process descriptions into structured BPMN representations. Your task is to generate a Python dictionary following this structure:
``` python
{
    'start_nodes': [
        {
            'id': '<unique_id>',
            'name': '<start_node_name>',
            'BPMNtype': 'startEvent',
            'incoming': [],
            'outgoing': ['<next_node_id>']
        }
    ],
    'nodes': [
        {
            'id': '<unique_id>',
            'name': '<node_name>',
            'BPMNtype': '<BPMN_element_type>',
            'incoming': ['<previous_node_id>'],
            'outgoing': ['<next_node_id>']
        },
        ...
    ],
    'end_nodes': [
        {   
            'id': '<unique_id>',
            'name': '<end_node_name>',
            'BPMNtype': 'endEvent',
            'incoming': ['<previous_node_id>'],
            'outgoing': []
        }
    ],
    'lanes' : [
        {
            'id': '<unique_id>',
            'name' : '<lane_name>',
            'nodes' : ['<id_of_node_in_lane>', ...]
        },
        ...
    ]
}
```
Key Rules:
1. Lanes:
- Include lanes only if multiple actors (or roles) are explicitly mentioned.
- Exclude lanes if only "You" is mentioned as the actor.
- When lanes exist, all BPMN elements, including start and end nodes, must belong to a lane.
- Assign start and end nodes to the most appropriate lanes.
2. Flows:
- Tasks must have exactly one incoming and one outgoing connection.
- Gateways:
-- Splitting Gateway: 1 incoming, multiple outgoing.
-- Merging Gateway: Multiple incoming, 1 outgoing.
3. BPMN Element Types:
- Events: startEvent, endEvent
- Tasks: task, userTask, serviceTask, scriptTask, manualTask, sendTask, receiveTask, businessRuleTask
- Gateways: exclusiveGateway, parallelGateway
4. Output Requirements:
- Produce a valid JSON-like Python dictionary.
- Ensure unique IDs and valid connections.

### EXAMPLES
Input:
"The process starts when the user logs in. The system checks the login details. If valid, the user dashboard is displayed. Otherwise, an error message is shown. The process ends."
Expected Output: 
``` python
{
    'start_nodes': [{'id': 'startEvent_123', 'name': 'Start', 'BPMNtype': 'startEvent', 'incoming': [], 'outgoing': ['userTask_456']}],
    'nodes': [
        {'id': 'userTask_456', 'name': 'User logs in', 'BPMNtype': 'userTask', 'incoming': ['startEvent_123'], 'outgoing': ['serviceTask_789']},
        {'id': 'serviceTask_789', 'name': 'Check login details', 'BPMNtype': 'serviceTask', 'incoming': ['userTask_456'], 'outgoing': ['exclusiveGateway_101']},
        {'id': 'exclusiveGateway_101', 'name': 'Is login valid?', 'BPMNtype': 'exclusiveGateway', 'incoming': ['serviceTask_789'], 'outgoing': ['userTask_102', 'userTask_103']},
        {'id': 'userTask_102', 'name': 'Show dashboard', 'BPMNtype': 'userTask', 'incoming': ['exclusiveGateway_101'], 'outgoing': ['endEvent_104']},
        {'id': 'userTask_103', 'name': 'Show error message', 'BPMNtype': 'userTask', 'incoming': ['exclusiveGateway_101'], 'outgoing': ['endEvent_104']}
    ],
    'end_nodes': [{'id': 'endEvent_104', 'name': 'End', 'BPMNtype': 'endEvent', 'incoming': ['userTask_102', 'userTask_103'], 'outgoing': []}],
    'lanes': []
}
``` 

Input:
"A customer places an order. The sales team validates the order. If valid, the team prepares the shipment. Otherwise, the customer service contacts the customer. The process ends."
Expected Output:
``` python
{
    'start_nodes': [{'id': 'startEvent_201', 'name': 'Start', 'BPMNtype': 'startEvent', 'incoming': [], 'outgoing': ['userTask_202']}],
    'nodes': [
        {'id': 'userTask_202', 'name': 'Place order', 'BPMNtype': 'userTask', 'incoming': ['startEvent_201'], 'outgoing': ['manualTask_203']},
        {'id': 'manualTask_203', 'name': 'Validate order', 'BPMNtype': 'manualTask', 'incoming': ['userTask_202'], 'outgoing': ['exclusiveGateway_204']},
        {'id': 'exclusiveGateway_204', 'name': 'Is order valid?', 'BPMNtype': 'exclusiveGateway', 'incoming': ['manualTask_203'], 'outgoing': ['serviceTask_205', 'sendTask_206']},
        {'id': 'serviceTask_205', 'name': 'Prepare shipment', 'BPMNtype': 'serviceTask', 'incoming': ['exclusiveGateway_204'], 'outgoing': ['endEvent_207']},
        {'id': 'sendTask_206', 'name': 'Contact customer', 'BPMNtype': 'sendTask', 'incoming': ['exclusiveGateway_204'], 'outgoing': ['endEvent_207']}
    ],
    'end_nodes': [{'id': 'endEvent_207', 'name': 'End', 'BPMNtype': 'endEvent', 'incoming': ['serviceTask_205', 'sendTask_206'], 'outgoing': []}],
    'lanes': [
        {'id': 'lane_301', 'name': 'Customer', 'nodes': ['startEvent_201', 'userTask_202']},
        {'id': 'lane_302', 'name': 'Sales Team', 'nodes': ['manualTask_203', 'exclusiveGateway_204', 'serviceTask_205']},
        {'id': 'lane_304', 'name': 'Customer Service', 'nodes': ['sendTask_206', 'endEvent_207']}
    ]
}
```

Input:
"The process is about the Account payable process, which starts with entering the order details. Once the details of the purchase order are entered, the creation of a receipt report should be done. When a receiving report is created, the process is split into 2 parallel branches : obtaining the vendors invoice and confirming all documents have been amended. Once all pre-tasks are executed, stamping should be done for all documents. The process is now complete."
Expected Output:
``` python
{
    'start_nodes': [{'id': 'startEvent_600', 'name': 'Unnamed', 'BPMNtype': 'startEvent', 'incoming': [], 'outgoing': ['userTask_496']}], 
    'nodes': [
        {'id': 'userTask_496', 'name': 'enter purchase order details', 'BPMNtype': 'userTask', 'incoming': ['startEvent_600'], 'outgoing': ['serviceTask_975']}, 
        {'id': 'serviceTask_975', 'name': 'create a receiving report', 'BPMNtype': 'task', 'incoming': ['userTask_496'], 'outgoing': ['parallelGateway_907']}, 
        {'id': 'parallelGateway_907', 'name': 'Unnamed', 'BPMNtype': 'parallelGateway', 'incoming': ['serviceTask_975'], 'outgoing': ['task_956', 'task_394']},
        {'id': 'task_956', 'name': 'gather the vendors invoice', 'BPMNtype': 'task', 'incoming': ['parallelGateway_907'], 'outgoing': ['parallelGateway_988']}, 
        {'id': 'task_394', 'name': 'confirm all documents have been amended', 'BPMNtype': 'task', 'incoming': ['parallelGateway_907'], 'outgoing': ['parallelGateway_988']}, 
        {'id': 'parallelGateway_988', 'name': 'Unnamed', 'BPMNtype': 'parallelGateway', 'incoming': ['task_956', 'task_394'], 'outgoing': ['task_569']}, 
        {'id': 'task_569', 'name': 'stamp all documents', 'BPMNtype': 'task', 'incoming': ['parallelGateway_988'], 'outgoing': ['endEvent_586']}
    ], 
    'end_nodes': [{'id': 'endEvent_586', 'name': 'Unnamed', 'BPMNtype': 'endEvent', 'incoming': ['task_569'], 'outgoing': []}], 
    'lanes': []
}
```

Input:
"The process begins with a main mechanic conducting a diagnostic check on a car to identify any issues. Based on this assessment, the mechanic creates a repair plan and proceeds to repair the engine. After the engine repair, the mechanic prepares a detailed report. If everything with the engine and the report checks out, the mechanic collects all relevant data and performs a final check to see if the engine is functioning well. If it is, the engine is finalized and the process concludes. Meanwhile, if the car has scratches and dents, an auto-body mechanic steps in to repair them. They first create a list of the dents and then fix them. Once the repairs are done, the car is painted and polished. On a separate note, if the tires are found to be broken, they are replaced, and a report of these activities is written. Concurrently, if the interior of the car has any issues, like worn-out leather seats, a broken dashboard, or damaged panels, these are respectively fixed by a designated interior specialist. After all these repairs, a comprehensive report is made, encapsulating all the repair activities carried out."
Expected Output:
``` python
{
    'start_nodes': [{'id': 'startEvent_824', 'name': 'Unnamed', 'BPMNtype': 'startEvent', 'incoming': [], 'outgoing': ['task_100']}], 
    'nodes': [
        {'id': 'task_100', 'name': 'Do a diagnostic check', 'BPMNtype': 'task', 'incoming': ['startEvent_824'], 'outgoing': ['task_538']}, 
        {'id': 'task_538', 'name': 'Make a repair plan', 'BPMNtype': 'task', 'incoming': ['task_100'], 'outgoing': ['parallelGateway_439']}, 
        {'id': 'task_675', 'name': 'Collect all the data', 'BPMNtype': 'task', 'incoming': ['parallelGateway_546'], 'outgoing': ['task_738']}, 
        {'id': 'task_738', 'name': 'Do final check', 'BPMNtype': 'task', 'incoming': ['task_675'], 'outgoing': ['exclusiveGateway_144']}, 
        {'id': 'exclusiveGateway_144', 'name': 'Does the engine work', 'BPMNtype': 'exclusiveGateway', 'incoming': ['task_738'], 'outgoing': ['endEvent_496', 'task_198']}, 
        {'id': 'parallelGateway_845', 'name': 'Unnamed', 'BPMNtype': 'parallelGateway', 'incoming': ['exclusiveGateway_834'], 'outgoing': ['task_178', 'task_892']}, 
        {'id': 'task_178', 'name': 'Create a list of the dents', 'BPMNtype': 'task', 'incoming': ['parallelGateway_845'], 'outgoing': ['parallelGateway_582']}, 
        {'id': 'task_892', 'name': 'Repair the dents', 'BPMNtype': 'task', 'incoming': ['parallelGateway_845'], 'outgoing': ['parallelGateway_582']}, 
        {'id': 'parallelGateway_582', 'name': 'Unnamed', 'BPMNtype': 'parallelGateway', 'incoming': ['task_178', 'task_892'], 'outgoing': ['task_663']}, 
        {'id': 'task_663', 'name': 'Paint the car', 'BPMNtype': 'task', 'incoming': ['parallelGateway_582', 'exclusiveGateway_834'], 'outgoing': ['task_622']}, 
        {'id': 'task_622', 'name': 'Polish the car', 'BPMNtype': 'task', 'incoming': ['task_663'], 'outgoing': ['exclusiveGateway_368']}, 
        {'id': 'exclusiveGateway_368', 'name': 'Are the tires broken', 'BPMNtype': 'exclusiveGateway', 'incoming': ['task_622'], 'outgoing': ['task_430', 'task_160']}, 
        {'id': 'task_160', 'name': 'Replace the tires', 'BPMNtype': 'task', 'incoming': ['exclusiveGateway_368'], 'outgoing': ['task_430']}, 
        {'id': 'task_430', 'name': 'Write a report about the activities he has done', 'BPMNtype': 'task', 'incoming': ['task_160', 'exclusiveGateway_368'], 'outgoing': ['parallelGateway_546']}, 
        {'id': 'exclusiveGateway_292', 'name': 'Is the leather in  the seats worn out', 'BPMNtype': 'exclusiveGateway', 'incoming': ['parallelGateway_439'], 'outgoing': ['exclusiveGateway_467', 'task_679']}, 
        {'id': 'exclusiveGateway_467', 'name': 'Dashboard broken', 'BPMNtype': 'exclusiveGateway', 'incoming': ['exclusiveGateway_292', 'task_679'], 'outgoing': ['exclusiveGateway_309', 'task_916']}, 
        {'id': 'exclusiveGateway_309', 'name': 'Panels broken', 'BPMNtype': 'exclusiveGateway', 'incoming': ['exclusiveGateway_467', 'task_916'], 'outgoing': ['task_204', 'task_490']}, 
        {'id': 'task_679', 'name': 'Fix the seats', 'BPMNtype': 'task', 'incoming': ['exclusiveGateway_292'], 'outgoing': ['exclusiveGateway_467']}, 
        {'id': 'task_916', 'name': 'Fix the dashboard', 'BPMNtype': 'task', 'incoming': ['exclusiveGateway_467'], 'outgoing': ['exclusiveGateway_309']}, 
        {'id': 'task_204', 'name': 'Make a report of the repairs', 'BPMNtype': 'task', 'incoming': ['exclusiveGateway_309', 'task_490'], 'outgoing': ['parallelGateway_546']}, 
        {'id': 'task_490', 'name': 'Fix the panels', 'BPMNtype': 'task', 'incoming': ['exclusiveGateway_309'], 'outgoing': ['task_204']}, 
        {'id': 'exclusiveGateway_834', 'name': 'Does the car has  scratches and dents', 'BPMNtype': 'exclusiveGateway', 'incoming': ['parallelGateway_439'], 'outgoing': ['parallelGateway_845', 'task_663']}, 
        {'id': 'parallelGateway_546', 'name': 'Unnamed', 'BPMNtype': 'parallelGateway', 'incoming': ['task_430', 'task_204', 'exclusiveGateway_939'], 'outgoing': ['task_675']}, 
        {'id': 'parallelGateway_439', 'name': 'Unnamed', 'BPMNtype': 'parallelGateway', 'incoming': ['task_538'], 'outgoing': ['exclusiveGateway_834', 'exclusiveGateway_292', 'task_775']}, 
        {'id': 'exclusiveGateway_939', 'name': 'Is the engine and  the report ok', 'BPMNtype': 'exclusiveGateway', 'incoming': ['task_480'], 'outgoing': ['parallelGateway_546', 'task_775']}, 
        {'id': 'task_775', 'name': 'Repair the engine', 'BPMNtype': 'task', 'incoming': ['parallelGateway_439', 'exclusiveGateway_939'], 'outgoing': ['task_480']}, 
        {'id': 'task_480', 'name': 'Create an appropriate report', 'BPMNtype': 'task', 'incoming': ['task_775'], 'outgoing': ['exclusiveGateway_939']}, 
        {'id': 'task_198', 'name': 'Finalize the engine', 'BPMNtype': 'task', 'incoming': ['exclusiveGateway_144'], 'outgoing': ['endEvent_496']}
    ], 
    'end_nodes': [{'id': 'endEvent_496', 'name': 'Unnamed', 'BPMNtype': 'endEvent', 'incoming': ['exclusiveGateway_144', 'task_198'], 'outgoing': []}], 
    'lanes': [
        {'id': 'lane_357', 'name': 'Main mechanic ', 'nodes': ['task_100', 'task_538', 'task_480', 'task_775', 'exclusiveGateway_939', 'task_675', 'task_738', 'exclusiveGateway_144', 'endEvent_496', 'startEvent_824', 'parallelGateway_546', 'parallelGateway_439', 'task_198']}, 
        {'id': 'lane_945', 'name': 'Autobody mechanic ', 'nodes': ['exclusiveGateway_834', 'parallelGateway_845', 'task_178', 'task_892', 'parallelGateway_582', 'task_663', 'task_622', 'exclusiveGateway_368', 'task_160', 'task_430']}, 
        {'id': 'lane_763', 'name': 'Interior ', 'nodes': ['exclusiveGateway_292', 'exclusiveGateway_467', 'exclusiveGateway_309', 'task_679', 'task_916', 'task_490', 'task_204']}
    ]
}
```